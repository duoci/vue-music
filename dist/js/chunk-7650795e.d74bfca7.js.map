{"version":3,"sources":["webpack:///./src/assets/img/recommendMusic.png","webpack:///./src/views/recommendmusic/Recommendmusic.vue?50df","webpack:///./src/views/recommendmusic/Recommendmusic.vue?79a5","webpack:///src/views/recommendmusic/Recommendmusic.vue","webpack:///./src/views/recommendmusic/Recommendmusic.vue?d83e","webpack:///./src/views/recommendmusic/Recommendmusic.vue","webpack:///./src/plugins/utils.js"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","on","playAll","_v","recommendMusic","length","staticStyle","attrs","clickRow","handleIndex","_e","staticRenderFns","component","formatDate","date","fmt","test","replace","RegExp","$1","getFullYear","substr","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","handleNum","num","toFixed","handleMusicTime","time","parseInt","Math","floor","m","s","returnSecond","split"],"mappings":"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","file":"js/chunk-7650795e.d74bfca7.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/recommendMusic.dadb06d2.png\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Recommendmusic.vue?vue&type=style&index=0&id=34588628&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"recommendMusic\"},[_c('div',{staticClass:\"recommendInfo\"},[_vm._m(0),_c('div',{staticClass:\"buttons\"},[_c('div',{staticClass:\"buttonItem playAll\",on:{\"click\":_vm.playAll}},[_c('i',{staticClass:\"iconfont icon-bofang playAll\"}),_c('span',[_vm._v(\"播放全部\")])]),_vm._m(1)])]),(_vm.recommendMusic.length != 0)?_c('div',[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.recommendMusic,\"size\":\"mini\",\"highlight-current-row\":\"\",\"stripe\":\"\",\"lazy\":\"\"},on:{\"row-dblclick\":_vm.clickRow}},[_c('el-table-column',{attrs:{\"label\":\"\",\"width\":\"30\",\"type\":\"index\",\"index\":_vm.handleIndex}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"音乐标题\",\"min-width\":\"300\"}}),_c('el-table-column',{attrs:{\"prop\":\"ar[0].name\",\"label\":\"歌手\",\"min-width\":\"120\"}}),_c('el-table-column',{attrs:{\"prop\":\"al.name\",\"label\":\"专辑\",\"min-width\":\"170\"}}),_c('el-table-column',{attrs:{\"prop\":\"dt\",\"label\":\"时长\",\"min-width\":\"100\"}})],1),_c('div',{staticClass:\"placeholder\"})],1):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('div',{staticClass:\"cover\"},[_c('img',{attrs:{\"src\":require(\"@/assets/img/recommendMusic.png\"),\"alt\":\"\"}})]),_c('div',{staticClass:\"titleInfo\"},[_c('div',{staticClass:\"infoTop\"},[_vm._v(\"每日歌曲推荐\")]),_c('div',{staticClass:\"infoBottom\"},[_vm._v(\"根据你的音乐口味生成，每天6:00更新\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"buttonItem\"},[_c('i',{staticClass:\"iconfont icon-xihuan\"}),_c('span',[_vm._v(\"收藏全部\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"recommendMusic\">\r\n    <!-- 每日推荐歌曲信息 -->\r\n    <div class=\"recommendInfo\">\r\n      <div class=\"title\">\r\n        <div class=\"cover\">\r\n          <img src=\"@/assets/img/recommendMusic.png\" alt=\"\" />\r\n        </div>\r\n        <div class=\"titleInfo\">\r\n          <div class=\"infoTop\">每日歌曲推荐</div>\r\n          <div class=\"infoBottom\">根据你的音乐口味生成，每天6:00更新</div>\r\n        </div>\r\n      </div>\r\n      <!-- 操作按钮 -->\r\n      <div class=\"buttons\">\r\n        <div class=\"buttonItem playAll\" @click=\"playAll\">\r\n          <i class=\"iconfont icon-bofang playAll\"></i>\r\n          <span>播放全部</span>\r\n        </div>\r\n        <div class=\"buttonItem\">\r\n          <i class=\"iconfont icon-xihuan\"></i>\r\n          <span>收藏全部</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 歌曲列表 -->\r\n    <div v-if=\"recommendMusic.length != 0\">\r\n      <!-- 表格 -->\r\n      <el-table :data=\"recommendMusic\" size=\"mini\" style=\"width: 100%\" @row-dblclick=\"clickRow\" highlight-current-row stripe lazy>\r\n        <el-table-column label=\"\" width=\"30\" type=\"index\" :index=\"handleIndex\"> </el-table-column>\r\n        <el-table-column prop=\"name\" label=\"音乐标题\" min-width=\"300\"> </el-table-column>\r\n        <el-table-column prop=\"ar[0].name\" label=\"歌手\" min-width=\"120\"> </el-table-column>\r\n        <el-table-column prop=\"al.name\" label=\"专辑\" min-width=\"170\"> </el-table-column>\r\n        <el-table-column prop=\"dt\" label=\"时长\" min-width=\"100\"> </el-table-column>\r\n      </el-table>\r\n      <div class=\"placeholder\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { handleMusicTime } from 'plugins/utils';\r\n  import { mapMutations, mapState } from 'vuex';\r\n  export default {\r\n    name: 'RecommendMusic',\r\n    data() {\r\n      return {\r\n        // 每日推荐歌曲列表\r\n        recommendMusic: [],\r\n        //   每日推荐id （自己起的，用于上传vuex当musicListId，只是作为一个唯一标识）\r\n        recommendMusicListId: 'recommendMusic',\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapState(['musicId', 'isLogin', 'musicListId']),\r\n    },\r\n    methods: {\r\n      ...mapMutations(['updateMusicId', 'updateMusicList']),\r\n      //   请求\r\n      // 获取每日推荐歌曲\r\n      async getRecommendMusic() {\r\n        const res = await this.get('/recommend/songs');\r\n        this.recommendMusic = res.data.dailySongs;\r\n        // 处理时间\r\n        this.recommendMusic.forEach((item, index) => {\r\n          this.recommendMusic[index].dt = handleMusicTime(item.dt);\r\n        });\r\n      },\r\n\r\n      // 事件\r\n      // 点击播放全部按钮的回调\r\n      playAll() {\r\n        this.updateMusicId(this.recommendMusic[0].id);\r\n        this.updateMusicList({\r\n          musicList: this.recommendMusic,\r\n          musicListId: this.recommendMusicListId,\r\n        });\r\n      },\r\n      // 处理table索引\r\n      handleIndex(index) {\r\n        index += 1;\r\n        if (index < 10) return `0${index}`;\r\n        return index;\r\n      },\r\n      // 双击table的row的回调\r\n      // 播放音乐的逻辑操作\r\n      async clickRow(row) {\r\n        this.updateMusicId(row.id);\r\n        // 如果歌单发生变化,则提交歌单到vuex\r\n        if (this.recommendMusicListId !== this.musicListId) {\r\n          // 将歌单传到vuex\r\n          this.updateMusicList({\r\n            musicList: this.recommendMusic,\r\n            musicListId: this.recommendMusicListId,\r\n          });\r\n        }\r\n      },\r\n\r\n      // 操作 DOM\r\n      handleDOM(current, last) {\r\n        if (document.querySelector('.recommendMusic')) {\r\n          const tableRows = document.querySelector('.recommendMusic').querySelectorAll('.el-table__row');\r\n          // 遍历当前musicList 找到当前播放的index的行进行渲染\r\n          const index = this.recommendMusic.findIndex(item => item.id === current);\r\n          if (index !== -1) {\r\n            // 直接修改dom样式的颜色无效\r\n            // 通过引入全局样式解决\r\n            // 将正在播放的音乐前面的索引换成小喇叭\r\n            tableRows[index].children[0].querySelector('.cell').innerHTML = '<div><i class=\"iconfont icon-yinliang\"></i></div>';\r\n            tableRows[index].children[0].querySelector('.iconfont').classList.add('currentRow');\r\n            tableRows[index].children[2].querySelector('.cell').classList.add('currentRow');\r\n          }\r\n          // 清除上一首的样式\r\n          if (last !== -1) {\r\n            const lastIndex = this.recommendMusic.findIndex(item => item.id === last);\r\n            if (lastIndex !== -1) {\r\n              // 将上一个播放的dom的小喇叭换回索引\r\n              tableRows[lastIndex].children[0].querySelector('.cell').innerHTML = `<div>${lastIndex + 1 < 10 ? `0${lastIndex + 1}` : lastIndex + 1}</div>`;\r\n\r\n              // 将上一首的类名删掉  小喇叭的html已经被替换了，不需要再还原\r\n              tableRows[lastIndex].children[2].querySelector('.cell').classList.remove('currentRow');\r\n            }\r\n          }\r\n        }\r\n      },\r\n    },\r\n    created() {\r\n      if (!this.isLogin) {\r\n        this.$message.error('只有登录后才能进入每日推荐页面哦!');\r\n        this.$router.replace('/discover');\r\n      }\r\n    },\r\n    async mounted() {\r\n      if (this.isLogin) {\r\n        await this.getRecommendMusic();\r\n        // 判断是否和上一次打开的歌单相同\r\n        if (this.recommendMusicListId === this.musicListId) {\r\n          this.handleDOM(this.musicId);\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      musicId(current, last) {\r\n        this.handleDOM(current, last);\r\n      },\r\n    },\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .recommendInfo {\r\n    padding: 20px;\r\n  }\r\n\r\n  .title {\r\n    display: flex;\r\n  }\r\n\r\n  .cover {\r\n    width: 150px;\r\n  }\r\n\r\n  .cover img {\r\n    width: 100%;\r\n  }\r\n\r\n  .titleInfo {\r\n    padding: 15px 10px;\r\n  }\r\n\r\n  .infoTop {\r\n    font-size: 19px;\r\n    font-weight: bold;\r\n    color: black;\r\n    margin: 3px 0;\r\n  }\r\n\r\n  .infoBottom {\r\n    font-size: 12px;\r\n  }\r\n\r\n  .buttons {\r\n    margin: 8px 0 0 3px;\r\n    display: flex;\r\n  }\r\n\r\n  .buttonItem {\r\n    font-size: 16px;\r\n    padding: 8px 15px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 20px;\r\n    transform: scale(0.9);\r\n  }\r\n\r\n  .buttonItem i {\r\n    font-size: 16px;\r\n    margin-right: 3px;\r\n    transform: scale(0.9);\r\n  }\r\n\r\n  .playAll {\r\n    background-color: #ec4141;\r\n    color: white;\r\n  }\r\n\r\n  .placeholder {\r\n    width: 100%;\r\n    height: 50px;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Recommendmusic.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Recommendmusic.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Recommendmusic.vue?vue&type=template&id=34588628&scoped=true&\"\nimport script from \"./Recommendmusic.vue?vue&type=script&lang=js&\"\nexport * from \"./Recommendmusic.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Recommendmusic.vue?vue&type=style&index=0&id=34588628&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"34588628\",\n  null\n  \n)\n\nexport default component.exports","// 格式化时间\r\n// eslint-disable-next-line func-style\r\nexport function formatDate(date, fmt) {\r\n  // 1.获取年份\r\n  // y+ 1个或者多个y  yyyy:2021\r\n  // y* 0个或者多个y\r\n  // y? 0个或者1个y\r\n  if (/(y+)/.test(fmt)) {\r\n    // RegExp.$1 指的是与正则表达式匹配的第一个子匹配\r\n    fmt = fmt.replace(RegExp.$1, `${date.getFullYear()}`.substr(4 - RegExp.$1.length));\r\n  }\r\n\r\n  // 2.获取月日等\r\n  const o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds(),\r\n  };\r\n  for (const k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      const str = `${o[k]}`;\r\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt;\r\n}\r\n\r\n// 不足两位补足两位 04:05:09\r\n// eslint-disable-next-line func-style\r\nfunction padLeftZero(str) {\r\n  // str=4 -> 004 截取 1 位 -> 04\r\n  return `00${str}`.substr(str.length);\r\n}\r\n\r\n// 处理大于1w的数字\r\n// eslint-disable-next-line func-style\r\nexport function handleNum(num) {\r\n  if (num > 10000) {\r\n    num = (num / 10000).toFixed(1);\r\n    return `${num}万`;\r\n  }\r\n  return num;\r\n}\r\n\r\n// 处理音乐时长的时间\r\n// eslint-disable-next-line func-style\r\nexport function handleMusicTime(time) {\r\n  // 如果超过了100000 基本都是毫秒为单位的了 先转成秒的\r\n  time = parseInt(time);\r\n  if (time > 10000) {\r\n    time = Math.floor(time / 1000);\r\n  } else {\r\n    time = Math.floor(time);\r\n  }\r\n  let m = Math.floor(time / 60);\r\n  let s = Math.floor(time % 60);\r\n  m = m < 10 ? `0${m}` : m;\r\n  s = s < 10 ? `0${s}` : s;\r\n  return `${m}:${s}`;\r\n}\r\n\r\n// 将播放时长还原为秒数\r\n// eslint-disable-next-line func-style\r\nexport function returnSecond(time) {\r\n  time = time.split(':');\r\n  const m = parseInt(time[0]);\r\n  const s = parseInt(time[1]);\r\n  return m * 60 + s;\r\n}\r\n"],"sourceRoot":""}