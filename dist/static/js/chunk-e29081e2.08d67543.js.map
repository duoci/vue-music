{"version":3,"sources":["webpack:///./src/views/search/searchChildren/SearchSong.vue?b10e","webpack:///src/views/search/searchChildren/SearchSong.vue","webpack:///./src/views/search/searchChildren/SearchSong.vue?dc57","webpack:///./src/views/search/searchChildren/SearchSong.vue","webpack:///./src/plugins/utils.js","webpack:///./src/views/search/searchChildren/SearchSong.vue?3bd7"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","songCount","multiMatch","artist","currentPage","on","$event","goToSingerDetail","id","attrs","img1v1Url","name","_e","staticStyle","searchSongList","clickRow","handleIndex","length","pageChange","staticRenderFns","component","formatDate","date","fmt","test","replace","RegExp","$1","getFullYear","substr","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero","handleNum","num","toFixed","handleMusicTime","time","parseInt","Math","floor","m","s","returnSecond","split"],"mappings":"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","file":"static/js/chunk-e29081e2.08d67543.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"SearchSong\"},[_c('div',{staticClass:\"tip\"},[_vm._v(\"找到 \"+_vm._s(_vm.songCount)+\" 首单曲\")]),(_vm.multiMatch.artist && _vm.currentPage == 1)?_c('div',{staticClass:\"multiMatch\"},[_c('div',{staticClass:\"matchTitle\"},[_vm._v(\"最佳匹配\")]),_c('div',{staticClass:\"matchResult\",on:{\"click\":function($event){return _vm.goToSingerDetail(_vm.multiMatch.artist[0].id)}}},[_c('div',{staticClass:\"matchCover\"},[_c('img',{attrs:{\"src\":_vm.multiMatch.artist[0].img1v1Url + '?param==200y200',\"alt\":\"\"}})]),_c('div',{staticClass:\"matchName\"},[_vm._v(\"歌手：\"+_vm._s(_vm.multiMatch.artist[0].name))]),_c('i',{staticClass:\"iconfont icon-arrow-right-bold\"})])]):_vm._e(),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.searchSongList,\"size\":\"mini\",\"highlight-current-row\":\"\",\"stripe\":\"\"},on:{\"row-dblclick\":_vm.clickRow}},[_c('el-table-column',{attrs:{\"label\":\"\",\"width\":\"30\",\"type\":\"index\",\"index\":_vm.handleIndex}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"音乐标题\",\"min-width\":\"200\"}}),_c('el-table-column',{attrs:{\"prop\":\"ar[0].name\",\"label\":\"歌手\",\"min-width\":\"100\"}}),_c('el-table-column',{attrs:{\"prop\":\"al.name\",\"label\":\"专辑\",\"min-width\":\"170\"}}),_c('el-table-column',{attrs:{\"prop\":\"dt\",\"label\":\"时长\",\"min-width\":\"60\"}})],1),(_vm.searchSongList.length != 0)?_c('div',{staticClass:\"page\"},[_c('el-pagination',{attrs:{\"background\":\"\",\"layout\":\"prev, pager, next\",\"total\":_vm.songCount,\"small\":\"\",\"page-size\":30,\"current-page\":_vm.currentPage},on:{\"current-change\":_vm.pageChange}})],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"SearchSong\">\r\n    <div class=\"tip\">找到 {{ songCount }} 首单曲</div>\r\n    <div class=\"multiMatch\" v-if=\"multiMatch.artist && currentPage == 1\">\r\n      <div class=\"matchTitle\">最佳匹配</div>\r\n      <div class=\"matchResult\" @click=\"goToSingerDetail(multiMatch.artist[0].id)\">\r\n        <div class=\"matchCover\">\r\n          <img :src=\"multiMatch.artist[0].img1v1Url + '?param==200y200'\" alt=\"\" />\r\n        </div>\r\n        <div class=\"matchName\">歌手：{{ multiMatch.artist[0].name }}</div>\r\n        <i class=\"iconfont icon-arrow-right-bold\"></i>\r\n      </div>\r\n    </div>\r\n    <el-table :data=\"searchSongList\" size=\"mini\" style=\"width: 100%\" @row-dblclick=\"clickRow\" highlight-current-row stripe>\r\n      <el-table-column label=\"\" width=\"30\" type=\"index\" :index=\"handleIndex\"> </el-table-column>\r\n      <el-table-column prop=\"name\" label=\"音乐标题\" min-width=\"200\"> </el-table-column>\r\n      <el-table-column prop=\"ar[0].name\" label=\"歌手\" min-width=\"100\"> </el-table-column>\r\n      <el-table-column prop=\"al.name\" label=\"专辑\" min-width=\"170\"> </el-table-column>\r\n      <el-table-column prop=\"dt\" label=\"时长\" min-width=\"60\"> </el-table-column>\r\n    </el-table>\r\n    <!-- 分页 -->\r\n    <div class=\"page\" v-if=\"searchSongList.length != 0\">\r\n      <el-pagination background layout=\"prev, pager, next\" :total=\"songCount\" small :page-size=\"30\" :current-page=\"currentPage\" @current-change=\"pageChange\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { handleMusicTime } from 'plugins/utils';\r\n  import { mapState, mapMutations } from 'vuex';\r\n  export default {\r\n    name: 'SearchSong',\r\n    data() {\r\n      return {\r\n        multiMatch: {},\r\n        searchSongList: [],\r\n        songCount: 0,\r\n        currentPage: 1,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapState(['musicListId', 'musicList', 'currentIndex']),\r\n    },\r\n    methods: {\r\n      ...mapMutations(['updateMusicId', 'changePlayState', 'updateMusicList']),\r\n      // 获取最佳匹配\r\n      async getMultMath() {\r\n        const res = await this.get('/search/multimatch', {\r\n          keywords: this.$route.params.id,\r\n        });\r\n        this.multiMatch = res.result;\r\n      },\r\n\r\n      // 请求搜索单曲\r\n      async getSearchSong() {\r\n        const res = await this.get('/cloudsearch', {\r\n          keywords: this.$route.params.id,\r\n          offset: 30 * (this.currentPage - 1),\r\n        });\r\n        this.songCount = res.result.songCount;\r\n        this.searchSongList = res.result.songs;\r\n        // 对数据的音乐时长进行处理\r\n        this.searchSongList.forEach((item, index) => {\r\n          this.searchSongList[index].dt = handleMusicTime(item.dt);\r\n        });\r\n      },\r\n\r\n      // 处理索引\r\n      handleIndex(index) {\r\n        index = index + 1 + 30 * (this.currentPage - 1);\r\n        if (index < 10) return `0${index}`;\r\n        return index;\r\n      },\r\n      // 双击table的row的回调\r\n      async clickRow(row) {\r\n        const isExist = this.musicList.find(item => item.id === row.id);\r\n        if (isExist) {\r\n          this.updateMusicId(row.id);\r\n          return;\r\n        }\r\n        this.changePlayState(false);\r\n        // 将请求到的歌曲详情插入到歌单对应位置并提交至vuex\r\n        this.musicList.splice(this.currentIndex + 1, 0, row);\r\n        this.updateMusicId(row.id);\r\n        this.updateMusicList({\r\n          musicList: this.musicList,\r\n          musicListId: this.musicListId,\r\n        });\r\n      },\r\n      // 评论点击翻页的回调\r\n      pageChange(page) {\r\n        this.currentPage = page;\r\n        this.searchSongList = [];\r\n        this.getSearchSong();\r\n      },\r\n      // 点击最佳匹配的回调\r\n      goToSingerDetail(id) {\r\n        this.$router.push({ name: 'singerDetail', params: { id } });\r\n      },\r\n    },\r\n    created() {\r\n      this.getMultMath();\r\n      this.getSearchSong();\r\n    },\r\n    watch: {},\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .SearchSong {\r\n    padding: 0 15px;\r\n  }\r\n\r\n  .tip {\r\n    font-weight: bold;\r\n    color: rgb(34, 34, 34);\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .matchTitle {\r\n    font-size: 12px;\r\n    color: rgb(34, 34, 34);\r\n    margin: 5px 0;\r\n  }\r\n\r\n  .matchResult {\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    border-radius: 5px;\r\n    overflow: hidden;\r\n    background-color: #f4f4f4;\r\n    width: 270px;\r\n    height: 65px;\r\n    margin-bottom: 20px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .matchCover {\r\n    width: 65px;\r\n    height: 65px;\r\n  }\r\n\r\n  .matchCover img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .matchName {\r\n    font-size: 13px;\r\n    color: rgb(31, 31, 31);\r\n    margin-left: 10px;\r\n  }\r\n\r\n  .multiMatch i {\r\n    position: absolute;\r\n    transform: translateY(-50%);\r\n    right: 15px;\r\n    top: 50%;\r\n  }\r\n\r\n  .page {\r\n    width: 100%;\r\n    text-align: center;\r\n    padding-bottom: 20px;\r\n    margin: 20px 0;\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchSong.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchSong.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SearchSong.vue?vue&type=template&id=7cdca4b4&scoped=true&\"\nimport script from \"./SearchSong.vue?vue&type=script&lang=js&\"\nexport * from \"./SearchSong.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SearchSong.vue?vue&type=style&index=0&id=7cdca4b4&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7cdca4b4\",\n  null\n  \n)\n\nexport default component.exports","// 格式化时间\r\n// eslint-disable-next-line func-style\r\nexport function formatDate(date, fmt) {\r\n  // 1.获取年份\r\n  // y+ 1个或者多个y  yyyy:2021\r\n  // y* 0个或者多个y\r\n  // y? 0个或者1个y\r\n  if (/(y+)/.test(fmt)) {\r\n    // RegExp.$1 指的是与正则表达式匹配的第一个子匹配\r\n    fmt = fmt.replace(RegExp.$1, `${date.getFullYear()}`.substr(4 - RegExp.$1.length));\r\n  }\r\n\r\n  // 2.获取月日等\r\n  const o = {\r\n    'M+': date.getMonth() + 1,\r\n    'd+': date.getDate(),\r\n    'h+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds(),\r\n  };\r\n  for (const k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      const str = `${o[k]}`;\r\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\r\n    }\r\n  }\r\n  return fmt;\r\n}\r\n\r\n// 不足两位补足两位 04:05:09\r\n// eslint-disable-next-line func-style\r\nfunction padLeftZero(str) {\r\n  // str=4 -> 004 截取 1 位 -> 04\r\n  return `00${str}`.substr(str.length);\r\n}\r\n\r\n// 处理大于1w的数字\r\n// eslint-disable-next-line func-style\r\nexport function handleNum(num) {\r\n  if (num > 10000) {\r\n    num = (num / 10000).toFixed(1);\r\n    return `${num}万`;\r\n  }\r\n  return num;\r\n}\r\n\r\n// 处理音乐时长的时间\r\n// eslint-disable-next-line func-style\r\nexport function handleMusicTime(time) {\r\n  // 如果超过了100000 基本都是毫秒为单位的了 先转成秒的\r\n  time = parseInt(time);\r\n  if (time > 10000) {\r\n    time = Math.floor(time / 1000);\r\n  } else {\r\n    time = Math.floor(time);\r\n  }\r\n  let m = Math.floor(time / 60);\r\n  let s = Math.floor(time % 60);\r\n  m = m < 10 ? `0${m}` : m;\r\n  s = s < 10 ? `0${s}` : s;\r\n  return `${m}:${s}`;\r\n}\r\n\r\n// 将播放时长还原为秒数\r\n// eslint-disable-next-line func-style\r\nexport function returnSecond(time) {\r\n  time = time.split(':');\r\n  const m = parseInt(time[0]);\r\n  const s = parseInt(time[1]);\r\n  return m * 60 + s;\r\n}\r\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchSong.vue?vue&type=style&index=0&id=7cdca4b4&scoped=true&lang=css&\""],"sourceRoot":""}